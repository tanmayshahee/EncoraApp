{"version":3,"sources":["webpack:///./src/Components/Header/Header.js","webpack:///./src/actions/toast.js","webpack:///./src/Components/ListView/ListView.js","webpack:///./src/actions/addEditNotes.js","webpack:///./src/Components/AddEditList/AddEditList.js","webpack:///./src/Components/Toast/Toast.js","webpack:///./src/Pages/AddEditNotes/AddEditNotes.js"],"names":["Header","className","toggleToast","payload","type","types","TOGGLE_TOAST","ImCancelCircle","connect","state","props","notes","addEditNotes","deleteNote","DELETE_NOTE","length","map","item","index","key","title","body","onClick","itemToDelete","deletedIndex","console","log","showToast","message","addNote","ADD_NOTE","useState","validated","setValidated","setTitle","setBody","resetForm","onValueChange","e","target","name","value","Form","noValidate","onSubmit","event","preventDefault","stopPropagation","currentTarget","checkValidity","newNote","Date","getTime","Group","Label","Control","onChange","placeholder","required","Feedback","as","rows","Button","variant","toast","style","position","top","right","minHeight","width","borderRadius","Toast","onClose","show","delay","autohide","Body","AddEditNotes"],"mappings":"oHASeA,EANA,WAEX,OACI,yBAAKC,UAAU,SAAf,Y,eCJKC,EAAc,SAACC,GAAD,MAAc,CACrCC,KAAMC,IAAMC,aACZH,Y,+rBCCJI,IAGA,IA2CeC,eANS,SAACC,EAAOC,GAC5B,cACOA,GADP,IAEIC,MAAOF,EAAMG,aAAaD,UAGM,CAACE,WC5Cf,SAACV,GAAD,MAAc,CACpCC,KAAMC,IAAMS,YACZX,YD0CiDD,eAAtCM,EA3CE,SAACE,GA0Bd,OACI,yBAAKT,UAAU,oBACVS,EAAMC,MAAMI,OAAS,EAjBnBL,EAAMC,MAAMK,KAAI,SAACC,EAAMC,GAC1B,OACI,yBAAKjB,UAAU,oBAAoBkB,IAAKF,EAAKE,KACrC,yBAAKlB,UAAU,gBACX,yBAAKA,UAAU,cAAcgB,EAAKG,OAClC,yBAAKnB,UAAU,aAAagB,EAAKI,OAErC,yBAAKpB,UAAU,aAAaqB,QAAS,kBAhBtC,SAACL,EAAKC,GACpB,IAAIK,EAAe,EAAH,GAAON,GACvBM,EAAaC,aAAeN,EAC5BO,QAAQC,IAAIH,GACZb,EAAMG,WAAWU,GACjBb,EAAMR,YAAY,CAACyB,WAAW,EAAMC,QAAS,iBAWaf,CAAWI,EAAMC,KAC5D,kBAAC,IAAD,WAYR,yBAAKjB,UAAU,YAAf,wB,6yCE/BhB,IA6EeO,eANS,SAACC,EAAOC,GAC5B,O,+VAAA,IACOA,KAI6B,CAACmB,QDnFlB,SAAC1B,GAAD,MAAc,CACjCC,KAAMC,IAAMyB,SACZ3B,YCiF8CD,eAAnCM,EA7EK,SAACE,GAAU,QACOqB,oBAAS,GADhB,GACpBC,EADoB,KACTC,EADS,SAEDF,mBAAS,IAFR,GAEpBX,EAFoB,KAEbc,EAFa,SAGHH,mBAAS,IAHN,GAGpBV,EAHoB,KAGdc,EAHc,KA0BrBC,EAAY,WACdF,EAAS,IACTC,EAAQ,KAGNE,EAAgB,SAACC,GACE,UAAlBA,EAAEC,OAAOC,KACRN,EAASI,EAAEC,OAAOE,OAElBN,EAAQG,EAAEC,OAAOE,QAGzB,OACI,yBAAKxC,UAAU,sBACX,yBAAKA,UAAU,kBACX,yBAAKA,UAAU,eAAeqB,QAASc,GAAvC,aAGJ,yBAAKnC,UAAU,sBACX,kBAACyC,EAAA,EAAD,CAAMC,YAAU,EAACX,UAAWA,EAAWY,SAxC9B,SAACN,GAIlB,GAHAO,MAAMC,iBACND,MAAME,mBAEuB,IADhBF,MAAMG,cACVC,gBACLxB,QAAQC,IAAI,qBACZO,GAAa,OACZ,CACDR,QAAQC,IAAI,sBACZO,GAAa,GACb,IAAIiB,EAAU,CACV/B,KAAK,IAAIgC,MAAOC,UAChBhC,QACAC,QAEJX,EAAMmB,QAAQqB,GACdxC,EAAMR,YAAY,CAACyB,WAAW,EAAMC,QAAS,eAC7CQ,OAwBQ,kBAACM,EAAA,EAAKW,MAAN,KACI,kBAACX,EAAA,EAAKY,MAAN,cACA,kBAACZ,EAAA,EAAKa,QAAN,CAAcnD,KAAK,OAAOoD,SAAUnB,EAAeI,MAAOrB,EAAOoB,KAAK,QAAQiB,YAAY,QAAQC,UAAQ,IAC1G,kBAAChB,EAAA,EAAKa,QAAQI,SAAd,CAAuBvD,KAAK,WAA5B,wBAIJ,kBAACsC,EAAA,EAAKW,MAAN,KACI,kBAACX,EAAA,EAAKY,MAAN,aACA,kBAACZ,EAAA,EAAKa,QAAN,CAAcK,GAAG,WAAWJ,SAAUnB,EAAeI,MAAOpB,EAAMmB,KAAK,OAAOqB,KAAK,IAAIH,UAAQ,IAC/F,kBAAChB,EAAA,EAAKa,QAAQI,SAAd,CAAuBvD,KAAK,WAA5B,uBAIJ,yBAAKH,UAAU,kBACX,kBAAC6D,EAAA,EAAD,CAAQ1D,KAAK,SAAS2D,QAAQ,WAA9B,e,+rBChExB,IA0BevD,eAPS,SAACC,EAAOC,GAC5B,cACOA,GADP,IAEIiB,UAAWlB,EAAMuD,MAAMrC,UACvBC,QAASnB,EAAMuD,MAAMpC,YAGW,CAAC1B,eAA1BM,EA1BM,SAACE,GAClB,OACI,yBACEuD,MAAO,CACLC,SAAU,WACVC,IAAKzD,EAAMiB,UAAY,OAAS,QAChCyC,MAAO1D,EAAMiB,UAAY,MAAQ,QACjC0C,UAAW,OACXC,MAAO,QACPC,aAAc,QAGhB,kBAACC,EAAA,EAAD,CAAOC,QAAS,kBAAM/D,EAAMR,YAAY,CAACyB,WAAW,KAAS+C,KAAMhE,EAAMiB,UAAWgD,MAAO,IAAMC,UAAQ,GACvG,kBAACJ,EAAA,EAAMK,KAAP,KAAanE,EAAMkB,cCChBkD,UAbM,SAACpE,GAClB,OACI,oCACI,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,yBAAKT,UAAU,uBACf,kBAAC,EAAD,MACA,kBAAC,EAAD","file":"2.main.js","sourcesContent":["import React from 'react';\nimport './header.scss';\n\nconst Header = () => {\n   \n    return (\n        <div className='title'>G Notes</div>\n    )\n}\nexport default Header;","import types from './actionTypes';\n\nexport const toggleToast = (payload) => ({\n    type: types.TOGGLE_TOAST,\n    payload\n});","import React from 'react';\nimport { connect } from 'react-redux';\nimport {deleteNote} from '../../actions/addEditNotes';\nimport {toggleToast} from '../../actions/toast';\nimport { ImCancelCircle } from 'react-icons/im'\nImCancelCircle\nimport './list-view.scss';\n\nconst ListView = (props) => {\n\n    const deleteNote = (item,index) => {\n         let itemToDelete = {...item};\n         itemToDelete.deletedIndex = index;\n         console.log(itemToDelete);\n         props.deleteNote(itemToDelete);\n         props.toggleToast({showToast: true, message: 'Note Deleted'});\n    }\n\n    const renderNotes = () => {\n        return props.notes.map((item, index) => {\n            return (\n                <div className='list-item-wrapper' key={item.key}>\n                        <div className='item-content'>\n                            <div className='item-title'>{item.title}</div>\n                            <div className='item-body'>{item.body}</div>\n                        </div>\n                        <div className='icon-cross' onClick={() => deleteNote(item, index)}>\n                        <ImCancelCircle />\n                        </div>\n                </div>\n            )\n        });\n    };\n\n    return (\n        <div className='list-view-parent'>\n            {props.notes.length > 0 ?\n                renderNotes()\n                :\n                <div className='no-notes'>No Notes Present</div>\n            }\n        </div>\n    )\n}\n\nconst mapStateToProps = (state, props) => {\n    return {\n        ...props,\n        notes: state.addEditNotes.notes,\n    }\n}\nexport default connect(mapStateToProps, {deleteNote, toggleToast})(ListView);","import types from './actionTypes';\n\nexport const addNote = (payload) => ({\n    type: types.ADD_NOTE,\n    payload\n});\n\nexport const deleteNote = (payload) => ({\n    type: types.DELETE_NOTE,\n    payload\n});","import React,{useState} from 'react';\nimport { connect } from 'react-redux';\nimport {addNote} from '../../actions/addEditNotes';\nimport {toggleToast} from '../../actions/toast';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport './add-edit-list.scss';\n\nconst AddEditList = (props) => {\n    const [validated, setValidated] = useState(false);\n    const [title, setTitle] = useState('');\n    const [body, setBody] = useState('');\n\n    const handleSubmit = (e) => {\n        event.preventDefault();\n        event.stopPropagation();\n        const form = event.currentTarget;\n        if (form.checkValidity() === false) {\n            console.log('validation failed');\n            setValidated(true);\n        }else{\n            console.log('validation success');\n            setValidated(false);\n            let newNote = {\n                key: new Date().getTime(),\n                title,\n                body\n            };\n            props.addNote(newNote);\n            props.toggleToast({showToast: true, message: 'Note Added'});\n            resetForm();\n        }\n    }\n\n    const resetForm = () => {\n        setTitle('');\n        setBody(''); \n    }\n\n    const onValueChange = (e) => {\n        if(e.target.name === 'title'){\n            setTitle(e.target.value);\n        }else{\n            setBody(e.target.value);\n        }\n    }    \n    return (\n        <div className='add-edit-list-main'>\n            <div className='button-wrapper'>\n                <div className='button-title' onClick={resetForm}>Add Note</div>\n            </div>\n\n            <div className='add-edit-list-form'>\n                <Form noValidate validated={validated} onSubmit={handleSubmit}>\n                    <Form.Group >\n                        <Form.Label>Title</Form.Label>\n                        <Form.Control type=\"text\" onChange={onValueChange} value={title} name='title' placeholder=\"title\" required />\n                        <Form.Control.Feedback type=\"invalid\">\n                            Please enter Title.\n                        </Form.Control.Feedback>\n                    </Form.Group>\n                    <Form.Group>\n                        <Form.Label>Body</Form.Label>\n                        <Form.Control as=\"textarea\" onChange={onValueChange} value={body} name='body' rows=\"3\" required/>\n                        <Form.Control.Feedback type=\"invalid\">\n                            Please enter Body.\n                        </Form.Control.Feedback>\n                    </Form.Group>\n                    <div className='button-wrapper'>\n                        <Button type=\"submit\" variant=\"primary\">\n                            Save\n                        </Button>\n                    </div>\n                </Form>\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = (state, props) => {\n    return{\n        ...props,\n    }\n}\n\nexport default connect(mapStateToProps, {addNote, toggleToast})(AddEditList);","import React from 'react';\nimport { connect } from 'react-redux';\nimport {toggleToast} from '../../actions/toast';\nimport Toast from 'react-bootstrap/Toast';\n\nconst ToastMessage = (props) => {\n    return(\n        <div\n          style={{\n            position: 'absolute',\n            top: props.showToast ? '65px' : '-75px',\n            right: props.showToast ? '50%' : '-75px',\n            minHeight: '40px',\n            width: '150px',\n            borderRadius: '8px',\n          }}\n        >\n          <Toast onClose={() => props.toggleToast({showToast: false})} show={props.showToast} delay={3000} autohide>\n            <Toast.Body>{props.message}</Toast.Body>\n          </Toast>\n        </div>\n    )\n};\n\nconst mapStateToProps = (state, props) => {\n    return{\n        ...props,\n        showToast: state.toast.showToast,\n        message: state.toast.message\n    }\n}\nexport default connect(mapStateToProps, {toggleToast})(ToastMessage);\n","import React from 'react';\nimport Header from '../../Components/Header/Header';\nimport ListView from '../../Components/ListView/ListView';\nimport AddEditList from '../../Components/AddEditList/AddEditList';\nimport Toast from '../../Components/Toast/Toast';\nimport './add-edit-notes.scss';\nconst AddEditNotes = (props) => {\n    return (\n        <>\n            <Toast />  \n            <Header />\n            <div className='add-edit-notes-body'>\n            <ListView />\n            <AddEditList />\n            </div> \n        </>\n    )\n};\n\nexport default AddEditNotes;"],"sourceRoot":""}